name: Lint, Test & Build
on: [push, pull_request]

env:
  POETRY_VERSION: 1.1.8
  POETRY_URL: https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    # We want to run on external PRs, but not on our own internal PRs as they'll be run
    # by the push to the branch. This prevents duplicated runs on internal PRs.
    # Some discussion of this here:
    # https://github.community/t/duplicate-checks-on-push-and-pull-request-simultaneous-event/18012
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Python Packages
        run: |
          pip install --upgrade pip
          pip install tox

      - name: Run isort
        run: tox -e isort

      - name: Run Black
        run: tox -e black

      - name: Run Flake8
        run: tox -e flake8

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    # We want to run on external PRs, but not on our own internal PRs as they'll be run
    # by the push to the branch. This prevents duplicated runs on internal PRs.
    # Some discussion of this here:
    # https://github.community/t/duplicate-checks-on-push-and-pull-request-simultaneous-event/18012
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    steps:
      - uses: actions/checkout@v2

      - name: Cache Poetry cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry
          key: poetry-cache-${{ runner.os }}-${{ matrix.python-version }}-${{ env.POETRY_VERSION }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          curl -sSL ${{ env.POETRY_URL }} | python -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install Python Packages
        run: |
          pip install --upgrade pip
          pip install tox tox-gh-actions tox-docker

      - name: Run Tests
        run: tox

  build:
    name: Docker build
    runs-on: ubuntu-latest
    needs: [lint, test]
    env:
      REGISTRY_HOST: ghcr.io

      # Push the built docker image only in the following cases:
      #  - The `NO_DOCKER_IMAGE` secret is not set. (Useful if you want to disable pushing
      #    of docker images in local forks of this repo).
      #  - The branch name does not start with `dependabot/`. The dependabot service doesn not
      #    have the proper security token to push to github packages.
      #  - The event that triggered this action was a `push`. If it was a PR the github action
      #    context will not have permissions to push the image to github packages.
      IMAGE_PUSH_ENABLED: ${{
          secrets.NO_DOCKER_IMAGE == null &&
          !startsWith(github.ref, 'refs/heads/dependabot/') &&
          github.event_name == 'push'
        }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to the Docker registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY_HOST }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: env.IMAGE_PUSH_ENABLED == 'true'

      - name: Generate tags
        id: library-registry-tags
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY_HOST }}/${{ github.repository_owner }}/library-registry
          tags: |
            type=semver,pattern={{major}}.{{minor}},priority=10
            type=semver,pattern={{version}},priority=20
            type=ref,event=branch,priority=30
            type=sha,priority=40

      - name: Build image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          target: libreg_active
          push: ${{ env.IMAGE_PUSH_ENABLED }}
          tags: ${{ steps.library-registry-tags.outputs.tags }}
