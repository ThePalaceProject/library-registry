name: Test Library Registry & Build Docker Image
on: [push, pull_request]
env:
  POSTGRES_USER: simplified_test
  POSTGRES_PASSWORD: test
  POSTGRES_DB: simplified_registry_test
  SIMPLIFIED_TEST_DATABASE: postgresql://simplified_test:test@localhost:5432/simplified_registry_test

jobs:
  test-library-registry:
    name: Run Library Registry Tests
    runs-on: ubuntu-latest

    # We want to run on external PRs, but not on our own internal PRs as they'll be run
    # by the push to the branch. This prevents duplicated runs on internal PRs.
    # Some discussion of this here:
    # https://github.community/t/duplicate-checks-on-push-and-pull-request-simultaneous-event/18012
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    services:
      postgres:
        image: postgis/postgis:12-3.1
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Python Packages
        run: |
          pip install --upgrade pip
          pip install pipenv
          pipenv install

      - name: Run Tests
        run: pipenv run pytest -x tests

  build-docker-library-registry:
    name: Build and push library-registry docker image
    runs-on: ubuntu-latest
    needs: test-library-registry
    env:
      REGISTRY_HOST: ghcr.io
      # Don't push the Docker image if the `NO_DOCKER_IMAGE` secret is set.
      IMAGE_PUSH_ENABLED: ${{ secrets.NO_DOCKER_IMAGE == null }}

    # Only build docker containers on a branch push. PRs are run in the context of the repository
    # they are made from, so they don't have the secrets necessary to push to docker hub.
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to the Docker registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY_HOST }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate tags for library-registry image
        id: library-registry-tags
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          images: ${{ env.REGISTRY_HOST }}/${{ github.repository_owner }}/library-registry
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Build and push library-registry image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          target: libreg_prod
          push: ${{ env.IMAGE_PUSH_ENABLED }}
          tags: ${{ steps.library-registry-tags.outputs.tags }}
