[tox]
envlist = isort, black, flake8, py{36,37,38,39}-docker
skipsdist = true

[testenv]
allowlist_externals = poetry
commands =
    poetry install --no-root -E pg-binary
    pytest {posargs:tests}
passenv = SIMPLIFIED_* CI
setenv =
    docker: SIMPLIFIED_TEST_DATABASE=postgres://simplified_test:test@localhost:9015/simplified_registry_test
docker =
    docker: db-registry

[testenv:isort]
description = Run isort (linter)
skip_install = True
deps = isort
setenv = ISORT_ARGS=--check-only
commands = isort {env:ISORT_ARGS:} --profile black .

[testenv:isort-reformat]
description  = {[testenv:isort]description} and reformat
skip_install = {[testenv:isort]skip_install}
deps         = {[testenv:isort]deps}
commands     = {[testenv:isort]commands}

[testenv:black]
description = Run Black (linter)
skip_install = True
deps = black
setenv = BLACK_LINT_ARGS=--check
commands = black {env:BLACK_LINT_ARGS:} .

[testenv:black-reformat]
description  = {[testenv:black]description} and reformat
skip_install = {[testenv:black]skip_install}
deps         = {[testenv:black]deps}
commands     = {[testenv:black]commands}

[testenv:flake8]
description = Run Flake8 (linter)
skip_install = True
deps = flake8
commands = flake8 .

[docker:db-registry]
image = postgis/postgis:12-3.1
environment =
    POSTGRES_USER=simplified_test
    POSTGRES_PASSWORD=test
    POSTGRES_DB=simplified_registry_test
ports = 9015:5432/tcp
healthcheck_cmd = pg_isready
healthcheck_interval = 5
healthcheck_retries = 10

[gh-actions]
python =
    3.6: py36
    3.7: py37
    3.8: py38
    3.9: py39

[flake8]
max-line-length = 120
extend-ignore = E203, E501, E711, E712
